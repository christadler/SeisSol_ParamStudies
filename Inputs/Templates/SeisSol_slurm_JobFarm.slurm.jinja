#!/bin/bash
# Job Name and Files (also --job-name)

#SBATCH -J MathildeTest_jobFarm
#Output and error (also --output, --error):
#SBATCH -o ./%j.%x.%N.out
#SBATCH -e ./%j.%x.%N.err

#Initial working directory:
#SBATCH --chdir=/hppfs/work/{{group}}/{{account}}/{{job_name}}/test_1/

#Notification and type
#SBATCH --mail-type=END
#SBATCH --mail-user={{email}}

# Wall clock limit:
# 6 runs, 40 min each, 240 min = 4h
#SBATCH --time=00:30:00
#SBATCH --no-requeue

#Setup of execution environment
#SBATCH --export=NONE
#--export=ALL
#SBATCH --account={{group}}
#constraints are optional
#--constraint="scratch&work"
#SBATCH --partition=test

#Number of nodes and MPI tasks per node:
#SBATCH --nodes=16
#SBATCH --ntasks-per-node=1
# no longer necessary
#module load slurm_setup
module load slurm_setup

#SBATCH --ear=off

#Run the program:
export MP_SINGLE_THREAD=no
unset KMP_AFFINITY
export OMP_NUM_THREADS=94
export OMP_PLACES="cores(47)"

export XDMFWRITER_ALIGNMENT=8388608
export XDMFWRITER_BLOCK_SIZE=8388608
export SC_CHECKPOINT_ALIGNMENT=8388608

export SEISSOL_CHECKPOINT_ALIGNMENT=8388608
export SEISSOL_CHECKPOINT_DIRECT=1
export ASYNC_MODE=THREAD
export ASYNC_BUFFER_ALIGNMENT=8388608
export SEISSOL_ASAGI_MPI_MODE=OFF

source /etc/profile.d/modules.sh

echo 'num_nodes:' $SLURM_JOB_NUM_NODES 'ntasks:' $SLURM_NTASKS 'cpus_per_task:' $SLURM_CPUS_PER_TASK
ulimit -Ss 2097152

array=(  {{job_list}} )
for i in "${array[@]}"
do
        echo "ID: $i"
        cd $i
        mkdir -p {{tp_output_file_dir}}/$i/
        srun -n $SLURM_NTASKS ../seissol_bin/SeisSol_Release_dskx_4_elastic parameters.par
        $myfile={{tp_output_file_dir}}/$i/$i-surface.xdmf
        echo "Myfile: $myfile"
#        Step 1:
         srun python -u ~/SeisSol/postprocessing/science/GroundMotionParametersMaps/ComputeGroundMotionParametersFromSurfaceOutput_Hybrid.py $myfile --MP 48
#        Step 2:
        This will create a file named $filenameprefix-surface-resampled.xdmf
         python ~/SeisSol/postprocessing/visualization/tools/extractDataFromUnstructuredOutput.py $myfile --Data u1 u2 u3 --time 90
         {{postprocessing_cmd1}}
         {{postprocessing_cmd2}}
        rm $myfile
        cd ..
done


